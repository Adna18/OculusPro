// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OftamoloskaOrdinacija.Services.Database;

#nullable disable

namespace OftamoloskaOrdinacija.Services.Migrations
{
    [DbContext(typeof(OftamoloskiCentarContext))]
    [Migration("20250403111702_baza")]
    partial class baza
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Dojam", b =>
                {
                    b.Property<int>("DojamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DojamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DojamId"), 1L, 1);

                    b.Property<bool?>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("DojamId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Dojam", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SpolId")
                        .HasColumnType("int")
                        .HasColumnName("SpolID");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TipKorisnikaId")
                        .HasColumnType("int")
                        .HasColumnName("TipKorisnikaID");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KorisnikId");

                    b.HasIndex("SpolId");

                    b.HasIndex("TipKorisnikaId");

                    b.HasIndex(new[] { "Username" }, "UQ__Korisnik__536C85E4FD7E0446")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Korisnik__A9D105347AB120A1")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"), 1L, 1);

                    b.Property<string>("BrojNarudzbe")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<double?>("Iznos")
                        .HasColumnType("float");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Novost", b =>
                {
                    b.Property<int>("NovostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NovostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NovostId"), 1L, 1);

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("date");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naslov")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NovostId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Novost", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.OmiljeniProizvodi", b =>
                {
                    b.Property<int>("OmiljeniProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OmiljeniProizvodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OmiljeniProizvodId"), 1L, 1);

                    b.Property<DateTime?>("DatumDodavanja")
                        .HasColumnType("date");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("OmiljeniProizvodId")
                        .HasName("PK__Omiljeni__C509DCAB6CEE6737");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("OmiljeniProizvodi", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProizvodId"), 1L, 1);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VrstaId")
                        .HasColumnType("int")
                        .HasColumnName("VrstaID");

                    b.HasKey("ProizvodId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Proizvod", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecenzijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"), 1L, 1);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecenzijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Recenzija", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.RecommendResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DrugiProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("DrugiProizvodID");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.Property<int?>("PrviProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("PrviProizvodID");

                    b.Property<int?>("TreciProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("TreciProizvodID");

                    b.HasKey("Id");

                    b.ToTable("RecommendResult", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Spol", b =>
                {
                    b.Property<int>("SpolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpolId"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SpolId");

                    b.ToTable("Spol", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.StavkaNarudzbe", b =>
                {
                    b.Property<int>("StavkaNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StavkaNarudzbeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaNarudzbeId"), 1L, 1);

                    b.Property<int?>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int")
                        .HasColumnName("ProizvodID");

                    b.HasKey("StavkaNarudzbeId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("StavkaNarudzbe", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"), 1L, 1);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikIdDoktor")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID_doktor");

                    b.Property<int?>("KorisnikIdPacijent")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID_pacijent");

                    b.HasKey("TerminId");

                    b.HasIndex("KorisnikIdDoktor");

                    b.HasIndex("KorisnikIdPacijent");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.TipKorisnika", b =>
                {
                    b.Property<int>("TipKorisnikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipKorisnikaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipKorisnikaId"), 1L, 1);

                    b.Property<string>("Tip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipKorisnikaId");

                    b.ToTable("TipKorisnika", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Transakcija", b =>
                {
                    b.Property<int>("TransakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransakcijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransakcijaId"), 1L, 1);

                    b.Property<double?>("Iznos")
                        .HasColumnType("float");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("NarudzbaID");

                    b.Property<string>("StatusTransakcije")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status_transakcije");

                    b.Property<string>("TransId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("trans_id");

                    b.HasKey("TransakcijaId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("Transakcija", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.VrstaProizvodum", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VrstaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaId"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VrstaId")
                        .HasName("PK__VrstaPro__42CB8F0F22B4B70C");

                    b.ToTable("VrstaProizvoda");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.ZdravstveniKarton", b =>
                {
                    b.Property<int>("ZdravstveniKartonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ZdravstveniKartonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZdravstveniKartonId"), 1L, 1);

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZdravstveniKartonId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("ZdravstveniKarton", (string)null);
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Dojam", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Dojams")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Dojam__KorisnikI__52593CB8");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Proizvod", "Proizvod")
                        .WithMany("Dojams")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK__Dojam__ProizvodI__534D60F1");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Korisnik", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Spol", "Spol")
                        .WithMany("Korisniks")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("FK__Korisnik__SpolID__403A8C7D");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.TipKorisnika", "TipKorisnika")
                        .WithMany("Korisniks")
                        .HasForeignKey("TipKorisnikaId")
                        .HasConstraintName("FK__Korisnik__TipKor__3F466844");

                    b.Navigation("Spol");

                    b.Navigation("TipKorisnika");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Narudzba", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Narudzba__Korisn__45F365D3");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Novost", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Novosts")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Novost__Korisnik__4BAC3F29");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.OmiljeniProizvodi", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("OmiljeniProizvodis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__OmiljeniP__Koris__571DF1D5");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Proizvod", "Proizvod")
                        .WithMany("OmiljeniProizvodis")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK__OmiljeniP__Proiz__5629CD9C");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Proizvod", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.VrstaProizvodum", "Vrsta")
                        .WithMany("Proizvods")
                        .HasForeignKey("VrstaId")
                        .HasConstraintName("FK__Proizvod__VrstaI__4316F928");

                    b.Navigation("Vrsta");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Recenzija", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Recenzija__Koris__4F7CD00D");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Proizvod", "Proizvod")
                        .WithMany("Recenzijas")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK__Recenzija__Proiz__4E88ABD4");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.StavkaNarudzbe", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Narudzba", "Narudzba")
                        .WithMany("StavkaNarudzbes")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK__StavkaNar__Narud__5AEE82B9");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Proizvod", "Proizvod")
                        .WithMany("StavkaNarudzbes")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK__StavkaNar__Proiz__59FA5E80");

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Termin", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "KorisnikIdDoktorNavigation")
                        .WithMany("TerminKorisnikIdDoktorNavigations")
                        .HasForeignKey("KorisnikIdDoktor")
                        .HasConstraintName("FK__Termin__Korisnik__5DCAEF64");

                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "KorisnikIdPacijentNavigation")
                        .WithMany("TerminKorisnikIdPacijentNavigations")
                        .HasForeignKey("KorisnikIdPacijent")
                        .HasConstraintName("FK__Termin__Korisnik__5EBF139D");

                    b.Navigation("KorisnikIdDoktorNavigation");

                    b.Navigation("KorisnikIdPacijentNavigation");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Transakcija", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Narudzba", "Narudzba")
                        .WithMany("Transakcijas")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK__Transakci__Narud__6383C8BA");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.ZdravstveniKarton", b =>
                {
                    b.HasOne("OftamoloskaOrdinacija.Services.Database.Korisnik", "Korisnik")
                        .WithMany("ZdravstveniKartons")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Zdravstve__Koris__48CFD27E");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Dojams");

                    b.Navigation("Narudzbas");

                    b.Navigation("Novosts");

                    b.Navigation("OmiljeniProizvodis");

                    b.Navigation("Recenzijas");

                    b.Navigation("TerminKorisnikIdDoktorNavigations");

                    b.Navigation("TerminKorisnikIdPacijentNavigations");

                    b.Navigation("ZdravstveniKartons");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Narudzba", b =>
                {
                    b.Navigation("StavkaNarudzbes");

                    b.Navigation("Transakcijas");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Proizvod", b =>
                {
                    b.Navigation("Dojams");

                    b.Navigation("OmiljeniProizvodis");

                    b.Navigation("Recenzijas");

                    b.Navigation("StavkaNarudzbes");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.Spol", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.TipKorisnika", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("OftamoloskaOrdinacija.Services.Database.VrstaProizvodum", b =>
                {
                    b.Navigation("Proizvods");
                });
#pragma warning restore 612, 618
        }
    }
}
